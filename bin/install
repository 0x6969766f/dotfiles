#!/usr/bin/bash

set -e

# Paths
SSH="$HOME/.ssh"
DOTFILES="$HOME/.dotfiles"

# Helpers
info () {
  echo -e "\r[ \033[00;34m..\033[0m ] $1"
}
success () {
  echo -e "\r\033[2K[ \033[00;32mOK\033[0m ] $1"
}

# Super
sudo -v

# Move to ~ if we are not there yet and start fresh
cd && clear

# Start
info "Hello $(whoami)! Let's get you set up."

printf "\n"

# Directories
info "Setting up directories..."
mkdir -p "$HOME/.config"
mkdir -p "$HOME/Archives"
mkdir -p "$HOME/Development"
mkdir -p "$HOME/Development/personal"
mkdir -p "$HOME/Development/work"
mkdir -p "$HOME/Screenshots"
success "Directories created successfully!"

printf "\n"

# Command Line Tools
info "Installing Command Line Tools..."
if xcode-select -p &> /dev/null; then
  success "Command Line Tools already installed, skipping..."
else
  xcode-select --install
  xcode-select --switch /Library/Developer/CommandLineTools
  /usr/sbin/softwareupdate --install-rosetta --agree-to-license
  success "Command Line Tools installed successfully!"
fi

printf "\n"

# SSH
info "Generating SSH keys..."
if ! [[ -f "$SSH/authorized_keys" ]]; then
  mkdir -p "$SSH"
  ssh-keygen -t ed25519 -C "iivari.leinonen@gmail.com" -f "$SSH/id.personal"
  cat "$SSH/id.personal.pub" >> "$SSH/authorized_keys"
  eval "$(ssh-agent -s)"
  echo "# Github
  Host github.com
    AddKeysToAgent yes
    IdentityFile ~/.ssh/id.personal
    IgnoreUnknown UseKeychain" >> "$SSH/config"
  ssh-add ~/.ssh/id.personal
  success "SSH keys generated successfully!"
else
  success "SSH keys already generated, skipping..."
fi

printf "\n"

# Homebrew
info "Installing Homebrew..."
if which -s brew; then
  success "Homebrew already installed, skipping...!"
  brew update && brew upgrade
  success "Homebrew updated and upgraded successfully!"
else
  /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
  (echo; echo "eval '$(/opt/homebrew/bin/brew shellenv)'") >> ~/.zprofile
  source ~/.zprofile
  success "Homebrew installed successfully!"
fi

printf "\n"

# Ansible
info "Installing Ansible..."
if brew list ansible &>/dev/null; then
  success "Ansible already installed, skipping..."
else
  brew install ansible
  success "Ansible installed successfully!"
fi

printf "\n"

# Dotfiles
info "Fetching dotfiles..."
if ! [[ -d "$DOTFILES"  ]]; then
  mkdir -p "$DOTFILES"
  git clone https://github.com/0x6969766f/dotfiles.git "$DOTFILES"
  success "Dotfiles fetched successfully!"
else
  git -C "$DOTFILES" pull
  success "Dotfiles updated successfully!"
fi

printf "\n"

# Playbook
info "Running Ansible playbook..."

ANSIBLE_CONFIG="$DOTFILES/ansible.cfg" \
  ansible-galaxy install -r "$DOTFILES/config.requirements.yml" \
  &>/dev/null

ANSIBLE_CONFIG="$DOTFILES/ansible.cfg" \
  ansible-playbook "$DOTFILES/config.setup.yml" \
  --ask-become-pass --tags "all"

success "Done!"

printf "\n"

# Restart affected applications if `--no-restart` flag is not present.
if [[ ! ($* == *--no-restart*) ]]; then
  for app in "cfprefsd" "Dock" "Finder" "SystemUIServer"; do
    killall "${app}" > /dev/null 2>&1
  done
fi

printf "\n" && exit 0