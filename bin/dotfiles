#!/usr/bin/bash

set -e

# Paths
CONFIG_DIR="${HOME}/.config/dotfiles"
DOTFILES_DIR="${HOME}/.dotfiles"
SSH_DIR="${HOME}/.ssh"

# Icons
INFO="\r[ \033[00;34m..\033[0m ]"
SUCCESS="\r\033[2K[ \033[00;32mOK\033[0m ]"

# Move to ~ if we are not there yet and start fresh
cd && clear

printf "Hello $(whoami)! Let's get you set up.\n\n"

# Homebrew
printf "${INFO} Installing Homebrew\n"
if ! [ -x "$(command -v brew)" ]; then
  /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
  echo 'eval "$(/opt/homebrew/bin/brew shellenv)"' >> ~/.zprofile
  eval "$(/opt/homebrew/bin/brew shellenv)"
  printf "${SUCCESS} Homebrew installed successfully!\n"
else
  printf "${SUCCESS} Homebrew already installed, updating...\n"
  brew update && brew upgrade
fi

# printf "\n"

# # Ansbible
# info "Installing Ansible"
# if brew list ansible &>/dev/null; then
#   success "Ansible already installed, skipping..."
# else
#   brew install ansible
#   success "Ansible installed successfully!"
# fi

# printf "\n"

# # Directories
# info "Setting up directories..."
# mkdir -p $HOME/Archives
# mkdir -p $HOME/Development
# mkdir -p $HOME/Development/personal
# mkdir -p $HOME/Development/work
# mkdir -p $HOME/Screenshots
# if [[ -d "$DOTFILES" ]]; then
#   rm -rf $DOTFILES
# fi
# mkdir -p $DOTFILES
# success "Directories created successfully!"

# printf "\n"

# # Dotfiles
# info "Fetching dotfiles..."
# git clone git@github.com:0x6969766f/dotfiles.git $DOTFILES
# cd $DOTFILES
# git pull origin main
# success "Dotfiles fetched successfully!"

# printf "\n"

# # Playbook
# info "Running playbook..."

# # Steps:
# # ) Get full directory path of this wrapper
# # ) Install Ansible requirements like roles and collections
# # ) Execute the Ansible playbook
# SCRIPTPATH="$( cd -- "$(dirname "$0")" >/dev/null 2>&1 ; pwd -P )"

# ANSIBLE_CONFIG=${SCRIPTPATH}/ansible.cfg \
#   ansible-galaxy install -r ${SCRIPTPATH}/config.requirements.yml \
#   &>/dev/null 

# ANSIBLE_CONFIG=${SCRIPTPATH}/ansible.cfg \
#   ansible-playbook ${SCRIPTPATH}/config.setup.yml \
#   --ask-become-pass --tags "all"

# success "Done!\n"

# # Restart affected applications if `--no-restart` flag is not present.
# if [[ ! ($* == *--no-restart*) ]]; then
#   for app in "cfprefsd" "Dock" "Finder" "SystemUIServer"; do
#     killall "${app}" > /dev/null 2>&1
#   done
# fi

# printf "\n"

# printf "Lastly, you might want to do the following:\n"
# printf "[ x ] restart/switch terminal to apply changes'\n"
# printf "[ x ] log out and log back in to make all settings take effect\n"
# printf "[ x ] install drivers for external soundcard\n"
# printf "[ x ] generate ssh keys (work)\n"
# printf "[ x ] generate npm keys (work)\n"
# printf "[ x ] add osx profile (work)\n"

# printf "\n" && exit 0